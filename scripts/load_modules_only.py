"""Load all modules from tarkov.dev API."""
import asyncio
import sys
import os

sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database import Database
from api_clients import TarkovAPIClient
from services.sync_service import SyncService


async def main():
    """Sync modules from API."""
    print("=" * 80)
    print("  –ó–ê–ì–†–£–ó–ö–ê –ú–û–î–£–õ–ï–ô –ò–ó TARKOV.DEV API")
    print("=" * 80)
    print()
    
    db_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), "data", "eft_helper.db")
    db = Database(db_path)
    await db.init_db()
    
    api_client = TarkovAPIClient()
    sync_service = SyncService(db, api_client)
    
    try:
        print("üì° –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª–∏ –∏–∑ API...")
        print("   –≠—Ç–æ –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ –º–∏–Ω—É—Ç—ã...\n")
        
        # Load modules
        module_count = await sync_service.sync_modules()
        
        print(f"\n‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–æ–¥—É–ª–µ–π: {module_count}")
        
        # Also load weapons
        print("\nüì° –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ä—É–∂–∏–µ –∏–∑ API...")
        weapon_count = await sync_service.sync_weapons()
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –æ—Ä—É–∂–∏—è: {weapon_count}")
        
        # Check database
        import aiosqlite
        async with aiosqlite.connect(db.db_path) as conn:
            async with conn.execute("SELECT COUNT(*) FROM modules") as cursor:
                total_modules = (await cursor.fetchone())[0]
            
            async with conn.execute("SELECT COUNT(*) FROM weapons") as cursor:
                total_weapons = (await cursor.fetchone())[0]
            
            async with conn.execute(
                "SELECT slot_type, COUNT(*) FROM modules GROUP BY slot_type"
            ) as cursor:
                module_types = await cursor.fetchall()
        
        print("\n" + "=" * 80)
        print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
        print("=" * 80)
        print(f"–í—Å–µ–≥–æ –æ—Ä—É–∂–∏—è –≤ –ë–î: {total_weapons}")
        print(f"–í—Å–µ–≥–æ –º–æ–¥—É–ª–µ–π –≤ –ë–î: {total_modules}")
        print(f"\n–¢–∏–ø—ã –º–æ–¥—É–ª–µ–π:")
        for slot_type, count in module_types:
            print(f"  ‚Ä¢ {slot_type:15} {count:>5} —à—Ç.")
        print("=" * 80)
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        await api_client.close()


if __name__ == "__main__":
    asyncio.run(main())
