"""Full synchronization with tarkov.dev API - loads all data."""
import asyncio
import sys
import os

sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database import Database
from api_clients import TarkovAPIClient
from services.sync_service import SyncService


async def main():
    """Full sync of all data from tarkov.dev API."""
    print("=" * 80)
    print("  –ü–û–õ–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –° TARKOV.DEV API")
    print("=" * 80)
    print()
    
    # Initialize database and API client
    db_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), "data", "eft_helper.db")
    db = Database(db_path)
    await db.init_db()
    
    api_client = TarkovAPIClient()
    sync_service = SyncService(db, api_client)
    
    try:
        print("üì° –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ tarkov.dev API...")
        print("   –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...\n")
        
        # Perform full sync
        results = await sync_service.sync_all()
        
        print("\n" + "=" * 80)
        print("‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("=" * 80)
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   ‚Ä¢ –¢–æ—Ä–≥–æ–≤—Ü—ã: {results.get('traders', 0)}")
        print(f"   ‚Ä¢ –û—Ä—É–∂–∏–µ: {results.get('weapons', 0)}")
        print(f"   ‚Ä¢ –ú–æ–¥—É–ª–∏: {results.get('modules', 0)}")
        print(f"   ‚Ä¢ –ö–≤–µ—Å—Ç–æ–≤—ã–µ —Å–±–æ—Ä–∫–∏: {results.get('quest_builds', 0)}")
        print("=" * 80)
        
        # Check database stats
        print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        import aiosqlite
        async with aiosqlite.connect(db.db_path) as conn:
            # Count weapons
            async with conn.execute("SELECT COUNT(*) FROM weapons") as cursor:
                weapon_count = (await cursor.fetchone())[0]
            
            # Count modules
            async with conn.execute("SELECT COUNT(*) FROM modules") as cursor:
                module_count = (await cursor.fetchone())[0]
            
            # Count builds
            async with conn.execute("SELECT COUNT(*) FROM builds") as cursor:
                build_count = (await cursor.fetchone())[0]
            
            # Count traders
            async with conn.execute("SELECT COUNT(*) FROM traders") as cursor:
                trader_count = (await cursor.fetchone())[0]
            
            # Sample weapons with characteristics
            async with conn.execute(
                """SELECT name_en, caliber, ergonomics, recoil_vertical 
                   FROM weapons 
                   WHERE ergonomics IS NOT NULL 
                   LIMIT 5"""
            ) as cursor:
                sample_weapons = await cursor.fetchall()
        
        print(f"   ‚Ä¢ –û—Ä—É–∂–∏–µ –≤ –ë–î: {weapon_count}")
        print(f"   ‚Ä¢ –ú–æ–¥—É–ª–∏ –≤ –ë–î: {module_count}")
        print(f"   ‚Ä¢ –°–±–æ—Ä–∫–∏ –≤ –ë–î: {build_count}")
        print(f"   ‚Ä¢ –¢–æ—Ä–≥–æ–≤—Ü—ã –≤ –ë–î: {trader_count}")
        
        if sample_weapons:
            print(f"\nüìä –ü—Ä–∏–º–µ—Ä—ã –æ—Ä—É–∂–∏—è —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏:")
            for weapon in sample_weapons:
                name, caliber, ergo, recoil = weapon
                print(f"   ‚Ä¢ {name}: {caliber}, –≠—Ä–≥–æ: {ergo}, –û—Ç–¥–∞—á–∞: {recoil}")
        
        print("\n" + "=" * 80)
        print("üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –æ—Ä—É–∂–∏—è –∏ –º–æ–¥—É–ª–µ–π.")
        print("=" * 80)
        
    finally:
        await api_client.close()


if __name__ == "__main__":
    asyncio.run(main())
