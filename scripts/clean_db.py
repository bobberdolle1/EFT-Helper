"""–û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å—Ç–∞—Ä—ã—Ö –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
import asyncio
import aiosqlite
import sys
import os

# Add parent directory to path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


async def clean_database():
    """–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
    db_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), "data", "eft_helper.db")
    
    print("=" * 60)
    print("  –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 60)
    print()
    
    async with aiosqlite.connect(db_path) as db:
        # 1. –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Å–±–æ—Ä–∫–∏
        print("üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Å–±–æ—Ä–æ–∫...")
        await db.execute("DELETE FROM builds")
        await db.commit()
        print("‚úÖ –°–±–æ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω—ã")
        
        # 2. –£–¥–∞–ª–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã –æ—Ä—É–∂–∏—è (–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å API)
        print("\nüîÑ –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –æ—Ä—É–∂–∏—è...")
        
        # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ—Ä—É–∂–∏—è
        async with db.execute("SELECT id, name_en FROM weapons ORDER BY id") as cursor:
            weapons = await cursor.fetchall()
        
        seen = set()
        to_delete = []
        for weapon_id, name in weapons:
            if name in seen:
                to_delete.append(weapon_id)
            else:
                seen.add(name)
        
        # –£–¥–∞–ª–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã
        for weapon_id in to_delete:
            await db.execute("DELETE FROM weapons WHERE id = ?", (weapon_id,))
        
        await db.commit()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {len(to_delete)} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –æ—Ä—É–∂–∏—è")
        
        # 3. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
        
        async with db.execute("SELECT COUNT(*) FROM weapons") as cursor:
            weapons_count = (await cursor.fetchone())[0]
        print(f"   üî´ –û—Ä—É–∂–∏–µ: {weapons_count}")
        
        async with db.execute("SELECT COUNT(*) FROM modules") as cursor:
            modules_count = (await cursor.fetchone())[0]
        print(f"   üîß –ú–æ–¥—É–ª–∏: {modules_count}")
        
        async with db.execute("SELECT COUNT(*) FROM builds") as cursor:
            builds_count = (await cursor.fetchone())[0]
        print(f"   üì¶ –°–±–æ—Ä–∫–∏: {builds_count}")
        
        async with db.execute("SELECT COUNT(*) FROM quests") as cursor:
            quests_count = (await cursor.fetchone())[0]
        print(f"   üìú –ö–≤–µ—Å—Ç—ã: {quests_count}")
    
    print()
    print("=" * 60)
    print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("=" * 60)


if __name__ == "__main__":
    asyncio.run(clean_database())
