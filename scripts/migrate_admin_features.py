"""Migration script to add admin features support."""
import asyncio
import aiosqlite
import sys
import os

# Add parent directory to path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


async def migrate():
    """Add last_activity column to users table."""
    db_path = "data/eft_helper.db"
    
    print("üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏...")
    
    async with aiosqlite.connect(db_path) as db:
        # Check if last_activity column exists
        async with db.execute("PRAGMA table_info(users)") as cursor:
            columns = await cursor.fetchall()
            column_names = [col[1] for col in columns]
        
        if "last_activity" not in column_names:
            print("   üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ last_activity...")
            try:
                await db.execute("ALTER TABLE users ADD COLUMN last_activity INTEGER DEFAULT 0")
                await db.commit()
                print("   ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ last_activity –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            except Exception as e:
                print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞: {e}")
        else:
            print("   ‚úì –ö–æ–ª–æ–Ω–∫–∞ last_activity —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # Update existing users with current timestamp
        from datetime import datetime
        current_timestamp = int(datetime.now().timestamp())
        
        async with db.execute("SELECT COUNT(*) FROM users WHERE last_activity = 0") as cursor:
            zero_count = (await cursor.fetchone())[0]
        
        if zero_count > 0:
            print(f"   üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {zero_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            await db.execute(
                "UPDATE users SET last_activity = ? WHERE last_activity = 0",
                (current_timestamp,)
            )
            await db.commit()
            print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(migrate())
