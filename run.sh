#!/bin/bash

# ================================
# EFT Helper Bot - Docker Runner
# ================================

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_header() {
    echo ""
    echo "========================================"
    echo "  EFT Helper Bot - Docker Manager"
    echo "========================================"
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        echo ""
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker:"
        echo "https://docs.docker.com/get-docker/"
        echo ""
        exit 1
    fi

    if ! command -v docker-compose &> /dev/null; then
        echo -e "${RED}‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        echo ""
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose:"
        echo "https://docs.docker.com/compose/install/"
        echo ""
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
check_env() {
    if [ ! -f ".env" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo ""
        
        if [ -f ".env.example" ]; then
            echo -e "${BLUE}üìù –°–æ–∑–¥–∞—é .env –∏–∑ .env.example...${NC}"
            cp ".env.example" ".env"
            echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"
            echo ""
            echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û! –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É–∫–∞–∂–∏—Ç–µ:${NC}"
            echo "   - BOT_TOKEN (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather –≤ Telegram)"
            echo "   - ADMIN_IDS (–≤–∞—à–∏ Telegram ID)"
            echo ""
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä
            ${EDITOR:-nano} .env
            
            echo ""
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."
        else
            echo -e "${RED}‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
            exit 1
        fi
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_dirs() {
    mkdir -p data logs
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
start_bot() {
    echo ""
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...${NC}"
    docker-compose up -d
    echo ""
    echo -e "${GREEN}‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo ""
    echo -e "${BLUE}üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ './run.sh logs' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop_bot() {
    echo ""
    echo -e "${BLUE}‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...${NC}"
    docker-compose down
    echo ""
    echo -e "${GREEN}‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart_bot() {
    echo ""
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...${NC}"
    docker-compose restart
    echo ""
    echo -e "${GREEN}‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!${NC}"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
show_logs() {
    echo ""
    echo -e "${BLUE}üìä –õ–æ–≥–∏ –±–æ—Ç–∞ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}"
    echo "========================================"
    docker-compose logs -f --tail=100
}

# –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
show_status() {
    echo ""
    echo -e "${BLUE}üîç –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:${NC}"
    echo "========================================"
    docker-compose ps
    echo ""
    echo "–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    docker stats --no-stream eft-helper-bot
    echo ""
}

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
rebuild_image() {
    echo ""
    echo -e "${BLUE}üèóÔ∏è  –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞...${NC}"
    docker-compose down
    docker-compose build --no-cache
    docker-compose up -d
    echo ""
    echo -e "${GREEN}‚úÖ –û–±—Ä–∞–∑ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!${NC}"
}

# –û—á–∏—Å—Ç–∫–∞
clean_all() {
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–∞!${NC}"
    echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–ø–∫–µ data/ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è."
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " confirm
    
    if [[ $confirm != [yY] ]]; then
        echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
        return
    fi
    
    echo ""
    echo -e "${BLUE}üßπ –û—á–∏—Å—Ç–∫–∞...${NC}"
    docker-compose down -v
    docker-compose down --rmi all
    echo ""
    echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
}

# –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
enter_shell() {
    echo ""
    echo -e "${BLUE}üíª –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...${NC}"
    echo "========================================"
    docker-compose exec eft-helper-bot /bin/bash
}

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
show_menu() {
    while true; do
        clear
        print_header
        echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        echo ""
        echo "[1] üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        echo "[2] üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        echo "[3] ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
        echo "[4] üìä –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "[5] üîç –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
        echo "[6] üèóÔ∏è  –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑"
        echo "[7] üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ (–æ–±—Ä–∞–∑—ã + –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã)"
        echo "[8] üíª –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (bash)"
        echo "[9] ‚ùå –í—ã—Ö–æ–¥"
        echo ""
        read -p "–í–∞—à –≤—ã–±–æ—Ä (1-9): " choice
        
        case $choice in
            1) start_bot; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
            2) restart_bot; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
            3) stop_bot; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
            4) show_logs ;;
            5) show_status; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
            6) rebuild_image; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
            7) clean_all; read -p "–ù–∞–∂–º–∏—Ç–µ Enter..." ;;
            8) enter_shell ;;
            9) echo ""; echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"; exit 0 ;;
            *) echo ""; echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"; sleep 2 ;;
        esac
    done
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_docker
    check_env
    create_dirs
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    case "${1:-}" in
        start)
            start_bot
            ;;
        stop)
            stop_bot
            ;;
        restart)
            restart_bot
            ;;
        logs)
            show_logs
            ;;
        status)
            show_status
            ;;
        rebuild)
            rebuild_image
            ;;
        clean)
            clean_all
            ;;
        shell)
            enter_shell
            ;;
        *)
            # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
            show_menu
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"
